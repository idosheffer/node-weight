# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '20d8b2be-ad2c-438e-8afb-d15a8b6d51cd'
  imageRepository: 'idosheffernodeweight'
  containerRegistry: 'idocontainer10.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  buildconfiguration: 'Release'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          
- stage: Deploy
  displayName: Deploy
  pool:
   vmImage: ubuntu-latest
  jobs:           
    - deployment: VMDeploy
      displayName: web
      pool:
       vmImage: 'Ubuntu-16.04'
      environment:
       name:  Deploy
       resourceType: VirtualMachine
      strategy:
       runOnce:
        deploy:
         steps:  
         - task: Ansible@0
           inputs:
             ansibleInterface: 'agentMachine'
             playbookPathOnAgentMachine: '/etc/ansible/myfirstplaybook.yml'
             inventoriesAgentMachine: 'noInventory'
             args: '--extra-vars "OKTAURL=$(OKTAURL) OKTAID=$(OKTAID) OKTASECRET=$(OKTASECRET) POSTGRESHOST=$(POSTGRESHOST) POSTGRESPASSWORD=$(POSTGRESPASSWORD) POSTGRESUSERNAME=$(POSTGRESUSERNAME) DOCKERUSERNAME=$(DOCKERUSERNAME) DOCKERPASSWORD=$(DOCKERPASSWORD)"'
             failOnStdErr: false

- stage: Production
  displayName: Production
  pool:
    vmImage: ubuntu-latest
  jobs:           
    - deployment: ProductionVMDeploy
      displayName: prodweb
      pool:
       vmImage: 'Ubuntu-16.04'
      environment:
       name:  prod
       resourceType: VirtualMachine
      strategy:
       runOnce:
        deploy:
         steps:  
         - task: Ansible@0
           inputs:
             ansibleInterface: 'agentMachine'
             playbookPathOnAgentMachine: '/etc/ansible/myfirstplaybook.yml'
             inventoriesAgentMachine: 'noInventory'
             args: '--extra-vars "OKTAURL=$(OKTAURL) OKTAID=$(OKTAID) OKTASECRET=$(OKTASECRET) POSTGRESHOST=$(POSTGRESHOST) POSTGRESPASSWORD=$(POSTGRESPASSWORD) POSTGRESUSERNAME=$(POSTGRESUSERNAME) DOCKERUSERNAME=$(DOCKERUSERNAME) DOCKERPASSWORD=$(DOCKERPASSWORD)"'
             failOnStdErr: false 